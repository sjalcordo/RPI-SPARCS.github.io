"use strict";(self.webpackChunkcampfire_docs=self.webpackChunkcampfire_docs||[]).push([[4517],{4007:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>d,default:()=>o,frontMatter:()=>n,metadata:()=>a,toc:()=>h});var r=t(4848),i=t(8453);const n={},d="Display Manager",a={id:"scripts/helpers/displayManager",title:"Display Manager",description:"The Display Manager component sets up the displays based on the aspect ratio of the displays currently on the system and assigns them static integers.",source:"@site/docs/scripts/helpers/displayManager.md",sourceDirName:"scripts/helpers",slug:"/scripts/helpers/displayManager",permalink:"/docs/scripts/helpers/displayManager",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/scripts/helpers/displayManager.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Attach To Campfire",permalink:"/docs/scripts/helpers/attachToCampfire"},next:{title:"Display UI",permalink:"/docs/scripts/helpers/displayUI"}},l={},h=[{value:"Custom Classes",id:"custom-classes",level:2},{value:"Properties",id:"properties",level:2},{value:"Unity Messages",id:"unity-messages",level:2},{value:"Private Methods",id:"private-methods",level:2},{value:"Public Methods",id:"public-methods",level:2}];function c(e){const s={a:"a",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"display-manager",children:"Display Manager"})}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.strong,{children:"Display Manager"})," component sets up the displays based on the aspect ratio of the displays currently on the system and assigns them static integers."]}),"\n",(0,r.jsx)(s.h2,{id:"custom-classes",children:"Custom Classes"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"DisplayManager Ref"})," is a static class that can be used to reference the display manager easily from any script."]}),"\n",(0,r.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Property:"}),(0,r.jsx)(s.th,{children:"Function:"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Display UI Prefab"}),(0,r.jsx)(s.td,{children:"The prefab used for displaying which screen is recognized as which."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Editor Floor Num"}),(0,r.jsx)(s.td,{children:"The static integer used during editing that the floor is assigned to."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Editor Wall Num"}),(0,r.jsx)(s.td,{children:"The static integer used during editing that the wall is assigned to."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Editor Aux Nums"}),(0,r.jsx)(s.td,{children:"The list of static integers used during editing that the auxillary screens are assigned to."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Floor Display Num"}),(0,r.jsx)(s.td,{children:"The integer that corresponds to the floor display."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Wall Display Num"}),(0,r.jsx)(s.td,{children:"The integer that corresponds to the wall display."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Auxillary Display Nums"}),(0,r.jsx)(s.td,{children:"The integers that correspond to auxillary displays."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Display UI"}),(0,r.jsxs)(s.td,{children:["The list of active ",(0,r.jsx)(s.a,{href:"displayUI",children:"Display UIs"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Current UI Alpha"}),(0,r.jsx)(s.td,{children:"The current alpha of the display UIs."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Prev UI Alpha"}),(0,r.jsx)(s.td,{children:"The previous alpha to prevent unnecessary alpha change calls."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Last Hovered Display"}),(0,r.jsx)(s.td,{children:"Used to prevent unnecessary calls to a change in display."})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"unity-messages",children:"Unity Messages"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Message:"}),(0,r.jsx)(s.th,{children:"Description:"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Awake"}),(0,r.jsx)(s.td,{children:"Finds and assigns an integer per display based on the aspect ratio of the display. Instantiates the display UIs per display."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Start"}),(0,r.jsx)(s.td,{children:"Resets display UI alpha."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Update"}),(0,r.jsx)(s.td,{children:"Updates display UI alpha and triggers an event if the current hovered display changes."})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"private-methods",children:"Private Methods"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Method:"}),(0,r.jsx)(s.th,{children:"Description:"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Set Display UI Alpha"}),(0,r.jsx)(s.td,{children:"Iterate through each display UI and sets its alpha."})]})})]}),"\n",(0,r.jsx)(s.h2,{id:"public-methods",children:"Public Methods"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Method:"}),(0,r.jsx)(s.th,{children:"Description:"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Get Aux Display"}),(0,r.jsx)(s.td,{children:"If the number given is greater than the number of displays, set it to the last aux display."})]})})]})]})}function o(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>d,x:()=>a});var r=t(6540);const i={},n=r.createContext(i);function d(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);