"use strict";(self.webpackChunkcampfire_docs=self.webpackChunkcampfire_docs||[]).push([[8909],{8187:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>a,frontMatter:()=>i,metadata:()=>d,toc:()=>h});var t=s(4848),n=s(8453);const i={sidebar_position:1},o="Browser Movement",d={id:"scripts/browsers/browserMovement",title:"Browser Movement",description:"The Browser Movement component is mainly used to allow for a browser to move between sections, resize to fullscreen or wrap, and sets up a select menu.",source:"@site/docs/scripts/browsers/browserMovement.md",sourceDirName:"scripts/browsers",slug:"/scripts/browsers/browserMovement",permalink:"/docs/scripts/browsers/browserMovement",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/scripts/browsers/browserMovement.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Browsers",permalink:"/docs/category/browsers"},next:{title:"Disable Overlapping Browsers",permalink:"/docs/scripts/browsers/disableOverlappingBrowsers"}},c={},h=[{value:"Enumerators",id:"enumerators",level:2},{value:"Structs",id:"structs",level:2},{value:"Properties",id:"properties",level:2},{value:"Public Methods",id:"public-methods",level:2},{value:"Private Methods",id:"private-methods",level:2}];function l(e){const r={a:"a",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"browser-movement",children:"Browser Movement"})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.strong,{children:"Browser Movement"})," component is mainly used to allow for a browser to move between sections, resize to fullscreen or wrap, and sets up a ",(0,t.jsx)(r.strong,{children:"select menu"}),"."]}),"\n",(0,t.jsx)(r.h2,{id:"enumerators",children:"Enumerators"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"FullscreenState"})}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Value:"}),(0,t.jsx)(r.th,{children:"Description:"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Windowed"}),(0,t.jsx)(r.td,{children:"When the browser takes up a variable amount of space and is freely placed on the section."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"FullSection"}),(0,t.jsx)(r.td,{children:"The browser takes up the full size of its parent section."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"FullWrap"}),(0,t.jsx)(r.td,{children:"The browser takes up the full wrap, only used on the wall."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Minimized"}),(0,t.jsx)(r.td,{children:"When the browser does not show, unused in favor of discretely placing the browser offscreen."})]})]})]}),"\n",(0,t.jsx)(r.h2,{id:"structs",children:"Structs"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"BrowserMovementTarget"})}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Property:"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"screenType"}),(0,t.jsx)(r.td,{children:"The type of screen. (Wall, Floor, Aux)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"section"}),(0,t.jsx)(r.td,{children:"The section on the screen to target."})]})]})]}),"\n",(0,t.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Property:"}),(0,t.jsx)(r.th,{children:"Function:"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Section"}),(0,t.jsx)(r.td,{children:"The current section the browser is on."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Move Time"}),(0,t.jsx)(r.td,{children:"The time it takes for the browser to move from an active position to an inactive position."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Canvas Manager"}),(0,t.jsxs)(r.td,{children:["The ",(0,t.jsx)(r.a,{href:"../canvas/canvasManager",children:"Canvas Manager"})," that manages this browser."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Active Position"}),(0,t.jsx)(r.td,{children:"The Vector2 position when the browser is active."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Original Size"}),(0,t.jsx)(r.td,{children:"The original relative size of the browser when setup, relative to its section."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Original Pos"}),(0,t.jsx)(r.td,{children:"The original relative position of the browser when setup, relative to its section."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"State"}),(0,t.jsx)(r.td,{children:"The current FullScreenState of the browser."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Rect Transform"}),(0,t.jsx)(r.td,{children:"The rect transform of the browser component."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Previous Screen"}),(0,t.jsx)(r.td,{children:"The previous screen that the browser was on."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Pointer UI"}),(0,t.jsx)(r.td,{children:"The pointer UI of the browser to ensure proper input handling."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Campfire Select"}),(0,t.jsxs)(r.td,{children:["The ",(0,t.jsx)(r.a,{href:"../campfire-select/campfireSelect",children:"Campfire Select"})," used to move the browser to another window."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Current Velocity"}),(0,t.jsx)(r.td,{children:"Current velocity used for smoothing the movement when activating."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Active"}),(0,t.jsx)(r.td,{children:"If the browser is active and should be shown."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Moveable"}),(0,t.jsxs)(r.td,{children:["If the browser can be moved through the ",(0,t.jsx)(r.a,{href:"../campfire-select/campfireSelect",children:"Campfire Select"}),"."]})]})]})]}),"\n",(0,t.jsx)(r.h2,{id:"public-methods",children:"Public Methods"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Method:"}),(0,t.jsx)(r.th,{children:"Description:"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Setup"}),(0,t.jsx)(r.td,{children:"Sets up the browser movement and assigns the original size, relative position, section, and grabs references to canvas manager."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"MoveToWall"}),(0,t.jsx)(r.td,{children:"Moves to the specified section on the wall."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"MoveToFloor"}),(0,t.jsx)(r.td,{children:"Moves the browser to the floor."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"MoveToAux"}),(0,t.jsx)(r.td,{children:"Moves to the specified Aux Display"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Move"}),(0,t.jsx)(r.td,{children:"Driver function for movement that moves to the specified screen type and section."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"SetupSelectEvents"}),(0,t.jsxs)(r.td,{children:["Sets up the event listeners for the ",(0,t.jsx)(r.a,{href:"../campfire-select//campfireSelect",children:"Campfire Select"})]})]})]})]}),"\n",(0,t.jsx)(r.h2,{id:"private-methods",children:"Private Methods"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Method:"}),(0,t.jsx)(r.th,{children:"Description:"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"AddCampfireSelect"}),(0,t.jsx)(r.td,{children:"Adds a campfire select and makes it a child of this object."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"SetPosition"}),(0,t.jsx)(r.td,{children:"Sets the active position and anchored position to the specified position, and resets current velocity."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"GetOffsetFromActive"}),(0,t.jsx)(r.td,{children:"Depending if the browser is active or not, get the position that the browser would be in if it was active."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"SameSectionOnWall"}),(0,t.jsx)(r.td,{children:"Logic for when the browser is moved onto the same section on the wall. (Windowed->Full Section->Full Wrap-> Windowed)"})]})]})]})]})}function a(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>o,x:()=>d});var t=s(6540);const n={},i=t.createContext(n);function o(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);