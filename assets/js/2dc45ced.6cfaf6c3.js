"use strict";(self.webpackChunkcampfire_docs=self.webpackChunkcampfire_docs||[]).push([[1739],{1710:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>o});var n=t(4848),i=t(8453);const r={},a="Server",c={id:"server",title:"Server",description:"The campfire has a built-in webserver within StreamingAssets that will run upon starting the program using the RunServer script, with a static library WSUtils within the Socket Manager script.",source:"@site/docs/server.md",sourceDirName:".",slug:"/server",permalink:"/RPI-SPARCS.github.io/docs/server",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/server.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"JSON Configuration",permalink:"/RPI-SPARCS.github.io/docs/launcher/jsonConfiguration"}},l={},o=[{value:"Message Format",id:"message-format",level:2},{value:"EventName",id:"eventname",level:3},{value:"Data",id:"data",level:3},{value:"Server Setup",id:"server-setup",level:2},{value:"Server.js",id:"serverjs",level:3},{value:"Public",id:"public",level:3},{value:"ServerUtils.js",id:"serverutilsjs",level:3},{value:"Javascript Client Setup",id:"javascript-client-setup",level:2},{value:"Unity Client Setup",id:"unity-client-setup",level:2}];function d(e){const s={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"server",children:"Server"})}),"\n",(0,n.jsxs)(s.p,{children:["The campfire has a built-in webserver within ",(0,n.jsx)(s.code,{children:"StreamingAssets"})," that will run upon starting the program using the ",(0,n.jsx)(s.a,{href:"./scripts/helpers/runServer",children:"RunServer"})," script, with a static library ",(0,n.jsx)(s.strong,{children:"WSUtils"})," within the ",(0,n.jsx)(s.a,{href:"./scripts/sockets/socketManager",children:"Socket Manager"})," script."]}),"\n",(0,n.jsx)(s.h2,{id:"message-format",children:"Message Format"}),"\n",(0,n.jsx)(s.p,{children:"Messages are set up in the format:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",metastring:'title="Message"',children:"{\r\n    eventName:[string],\r\n    data:[string]\r\n}\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This ensures ease of sending over websockets but requires pre-processing to messages before sending and needing to decode messages upon retrieval. Within Javascript, the ",(0,n.jsx)(s.code,{children:"JSON.stringify()"})," function can be used to easily convert messages into strings."]}),"\n",(0,n.jsx)(s.h3,{id:"eventname",children:"EventName"}),"\n",(0,n.jsx)(s.p,{children:"The event name is used to differentiate different messages from one another, typically by use of an if logic statement or a switch statement before processing the data. In the case that a simple string is broadcasted, it is typically safe to assume that the string can be substituted in as the eventName."}),"\n",(0,n.jsx)(s.h3,{id:"data",children:"Data"}),"\n",(0,n.jsx)(s.p,{children:"Data is sent over as a string, which in it of itself can contain a multitude of different types through the JSON format. While it can commonly be used to store primitive types, it is also possible to convert other custom classes or data types into a string and store it as such."}),"\n",(0,n.jsx)(s.h2,{id:"server-setup",children:"Server Setup"}),"\n",(0,n.jsxs)(s.p,{children:["The server is setup in a way that it will pass through and broadcast any message sent to it to all other users connected. Typically, the server must be compiled into an ",(0,n.jsx)(s.code,{children:".exe"})," file that will be run upon starting the application."]}),"\n",(0,n.jsx)(s.h3,{id:"serverjs",children:"Server.js"}),"\n",(0,n.jsxs)(s.p,{children:["The server uses express and websockets to handle connections and sending messages between clients. The server by default uses the ",(0,n.jsx)(s.code,{children:":2000"})," port, and the public IP for connections. On the Campfire, this is: ",(0,n.jsx)(s.code,{children:"http://campfire3.idea.rpi.edu:2000/"})]}),"\n",(0,n.jsxs)(s.p,{children:["When a client connects, it will log that connection to the console and then wait for any messages. When a message is received, it will attempt to parse it in the message format listed above. If it fails to do so, it will treat the entire message as the ",(0,n.jsx)(s.code,{children:"eventName"})," instead."]}),"\n",(0,n.jsx)(s.p,{children:"Additionally, the server allows for the possibility of dividing users by ID, in order to only send messages to specific clients."}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"eventName:"}),(0,n.jsx)(s.th,{children:"Data"}),(0,n.jsx)(s.th,{children:"Description:"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"set-id"}),(0,n.jsx)(s.td,{children:"id (int)"}),(0,n.jsx)(s.td,{children:"Sets a client to be associated with a specific ID. A single client can be associated with multiple IDs."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"remove-id"}),(0,n.jsx)(s.td,{children:"id (int)"}),(0,n.jsx)(s.td,{children:"Removes a client from a specified ID."})]})]})]}),"\n",(0,n.jsxs)(s.p,{children:["By default, messages will send to every ID, in order to send a message to a specific ID, the event name will need to be prepended with ",(0,n.jsx)(s.code,{children:"[int]:[eventName]"}),"."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",metastring:'title="IDed Message Example',children:'{eventName:"1:exampleEvent",data:"Hello world."}\n'})}),"\n",(0,n.jsxs)(s.p,{children:["This will send out the event ",(0,n.jsx)(s.code,{children:"exampleEvent"})," with the data ",(0,n.jsx)(s.code,{children:"Hello world."})," to all users associated with the ID ",(0,n.jsx)(s.code,{children:"1"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"public",children:"Public"}),"\n",(0,n.jsxs)(s.p,{children:["The public folder holds all of the files that can be sent out to clients from scripts to HTML files that they will receive. The server will process any ",(0,n.jsx)(s.code,{children:".html"})," files found within, and it is possible to access any ",(0,n.jsx)(s.code,{children:".html"})," files within by appending ",(0,n.jsx)(s.code,{children:"/[filename]"})," or ",(0,n.jsx)(s.code,{children:"/[filename.html]"})," to the end of the URL. This does not look for any ",(0,n.jsx)(s.code,{children:".html"})," files within any subfolders, so they must be found directly within the public folder."]}),"\n",(0,n.jsx)(s.h3,{id:"serverutilsjs",children:"ServerUtils.js"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"serverutils.js"})," file contains a simple method for connecting to the server with autoreconnection if the websocket is ever dropped. It will look for a websocket that matches the server url and port.",(0,n.jsx)(s.br,{}),"\n","Upon the connection opening, it will call the ",(0,n.jsx)(s.code,{children:"OpenOpen(event)"})," function, which can be defined as needed within the script of the website.",(0,n.jsx)(s.br,{}),"\n","Upon receiving a message, it will call the ",(0,n.jsx)(s.code,{children:"OnMessage(event)"}),", which can be defined as needed within the script of the website.",(0,n.jsx)(s.br,{}),"\n","If the socket loses connection, it will log to the console that the connection has failed, and reattempt a connection after a second."]}),"\n",(0,n.jsx)(s.h2,{id:"javascript-client-setup",children:"Javascript Client Setup"}),"\n",(0,n.jsxs)(s.p,{children:["In order to use the ",(0,n.jsx)(s.code,{children:"serverutils.js"})," script, it must be included within the ",(0,n.jsx)(s.code,{children:"<head>"})," tag of the ",(0,n.jsx)(s.code,{children:"html"})," file."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-html",metastring:'title="Using serverutils.js"',children:'<head>\r\n    <script src="serverutils.js"><\/script>\r\n</head>\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Once it is included, it can be used within any script of the ",(0,n.jsx)(s.code,{children:"html"})," file, either within ",(0,n.jsx)(s.code,{children:"<script>"})," tags or within an included ",(0,n.jsx)(s.code,{children:".js"})," file."]}),"\n",(0,n.jsxs)(s.p,{children:["Then, the functions ",(0,n.jsx)(s.code,{children:"OnMessage(event)"})," and ",(0,n.jsx)(s.code,{children:"OnOpen(event)"})," can be defined. In order to get the message as a string, it must be converted using ",(0,n.jsx)(s.code,{children:'event.data.toString("utf8")'}),". For example:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",metastring:'title="On Message"',children:'function OnMessage(event) {\r\n    let message = {eventName: "", data: ""};\r\n    try {\r\n        message = JSON.parse(event.data.toString("utf8"));\r\n    }\r\n    catch {\r\n        return;\r\n    }\r\n    console.log(message);\r\n}\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Before using any server related feature, the client must first connect to the server using ",(0,n.jsx)(s.code,{children:"Connect()"}),", otherwise it will receive or be able to broadcast any messages."]}),"\n",(0,n.jsx)(s.h2,{id:"unity-client-setup",children:"Unity Client Setup"}),"\n",(0,n.jsxs)(s.p,{children:["The Unity setup is very simple through the ",(0,n.jsx)(s.a,{href:"./scripts/sockets/socketManager",children:"Socket Manager"})," script. Most of the functions needed will be accessed using the ",(0,n.jsx)(s.a,{href:"./scripts/sockets/socketManager#wsutils",children:"WSUtils"})," script."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-c",metastring:'title="Simple Unity Setup',children:'using Campfire;\r\n\r\n...\r\n\r\n    private void Awake()\r\n    {\r\n        WSUtils.socketManager.OnMessage.AddListener(OnMessage);\r\n    }\r\n\r\n    private void Start()\r\n    {\r\n        WSUtils.socketManager.Connect();\r\n    }\r\n\r\n    private void OnMessage(WSResponse response)\r\n    {\r\n        Debug.Log(string.Format("Event Name: {0}\\nData: {1}", response.eventName, response.data));\r\n    }\n'})}),"\n",(0,n.jsxs)(s.p,{children:["For most use cases, these functions will be all that is necessary for use with the websocket server. The ",(0,n.jsx)(s.code,{children:"WSResponse"})," class has two fields, and is setup as such:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-c",metastring:'title="WSResponse"',children:"{\r\n    public string eventName;\r\n    public string data;\r\n}\n"})}),"\n",(0,n.jsxs)(s.p,{children:["In additional, the ",(0,n.jsx)(s.code,{children:"WSUtils"})," will also handle reading and converting any messages properly into a ",(0,n.jsx)(s.code,{children:"WSResponse"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"However, as C# within Unity does not easily support dynamically typed variables, it will be necessary to define any custom classes you wish to read before hand."})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>c});var n=t(6540);const i={},r=n.createContext(i);function a(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);